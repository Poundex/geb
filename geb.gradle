import java.time.Duration

plugins {
    id 'idea'
    id 'geb.coordinates'
    alias(libs.plugins.nexusPublish)
    alias(libs.plugins.asl2)
    id 'com.github.jk1.dependency-license-report' version '2.9'
}

configurations {
    site
}

dependencies {
    site project(path: 'doc:site', configuration: 'distribution')
}

import com.github.jk1.license.filter.LicenseBundleNormalizer

licenseReport {
    configurations = ['runtimeClasspath']
    allowedLicensesFile = new File("$projectDir/gradle/allowed-licenses.json")
    filters = [new LicenseBundleNormalizer(bundlePath: "$projectDir/gradle/license-normalizer-bundle.json")]
    excludes = ['io.netty:netty-tcnative']
}

nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = "c1802e5c2fe49"
            username.set(providers.gradleProperty("sonatypeOssUsername").forUseAtConfigurationTime())
            password.set(providers.gradleProperty("sonatypeOssPassword").forUseAtConfigurationTime())
        }
    }

    clientTimeout = Duration.ofSeconds(300)
    connectTimeout = Duration.ofSeconds(60)

    transitionCheckOptions {
        maxRetries.set(60)
        delayBetween.set(Duration.ofMillis(3000))
    }
}

extensions.findByName("gradleEnterprise")?.buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

tasks.register("stage", Sync) {
    from configurations.site
    into 'deploy'
}

idea {
    project {
        jdkName "1.8"
    }
}
