plugins {
    id "org.kordamp.gradle.oci-build-cache" version "0.5.0"
}

enableFeaturePreview('VERSION_CATALOGS')

include "module:geb-core",
    "module:geb-spock",
    "module:geb-junit",
    "module:geb-junit4",
    "module:geb-junit5",
    "module:geb-testng",
    "module:geb-implicit-assertions",
    "module:geb-ast",
    "module:geb-waiting",
    "module:geb-exceptions",
    "internal:test-support",
    "internal:test-support-spock",
    "integration:geb-gradle",
    "doc:asciidoctor-extension",
    "doc:manual",
    "doc:manual-snippets",
    "doc:manual-snippets:fixtures",
    "doc:manual-snippets:real-browser",
    "doc:site"

rootProject.name = 'geb'

def setBuildFile(project) {
    project.buildFileName = "${project.name}.gradle"

    project.children.each {
        setBuildFile(it)
    }
}

setBuildFile(rootProject)

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('groovy', '3.0.8')
            version('jetty', '9.4.8.v20171121')
            version('junit4', '4.13.2')
            version('junit5', '5.7.0')
            version('sauceConnect', '1.153')
            version('selenium', '3.141.59')
            version('spock', '2.0-groovy-3.0')
            version('threeTen', '1.4')
            alias('groovy.bom').to('org.codehaus.groovy', 'groovy-bom').versionRef('groovy')
            alias('htmlUnitDriver').to('org.seleniumhq.selenium:htmlunit-driver:2.35.1')
            alias('jetty.server').to('org.eclipse.jetty', 'jetty-server').versionRef('jetty')
            alias('jetty.servlet').to('org.eclipse.jetty', 'jetty-servlet').versionRef('jetty')
            alias('jsoup').to('org.jsoup:jsoup:1.11.2')
            alias('junit4').to('junit', 'junit').versionRef('junit4')
            alias('junit5.jupiter.api').to('org.junit.jupiter', 'junit-jupiter-api').versionRef('junit5')
            alias('junit5.jupiter.engine').to('org.junit.jupiter', 'junit-jupiter-engine').versionRef('junit5')
            alias('sauceConnect').to('com.saucelabs', 'ci-sauce').versionRef('sauceConnect')
            alias('selenium.api').to('org.seleniumhq.selenium', 'selenium-api').versionRef('selenium')
            alias('selenium.server').to('org.seleniumhq.selenium', 'selenium-server').versionRef('selenium')
            alias('selenium.support').to('org.seleniumhq.selenium', 'selenium-support').versionRef('selenium')
            alias('spock.core').to('org.spockframework', 'spock-core').versionRef('spock')
            alias('threeTen.extra').to('org.threeten', 'threeten-extra').versionRef('threeTen')
        }
    }
}

ext.isCiServer = System.getenv("OCI_WRITER_KEY_PASSPHRASE")?.size() > 0

buildCache {
    local {
        enabled = !isCiServer
    }
    remote(org.kordamp.gradle.plugin.buildcache.OCIBuildCache) {
        push = isCiServer
        compartmentId = 'ocid1.compartment.oc1..aaaaaaaap3fg3t2n5lm4vopfcn4ypw6frqgr5qblb3kdkjrwstskho2o5y6q'
        config {
            region = 'us-ashburn-1'
            tenantId = 'ocid1.tenancy.oc1..aaaaaaaakdvpvkhjg75hmgkzgwt5f6bxycvfinbi5fh4hk5jwwvrflitradq'
            if (isCiServer) {
                userId = 'ocid1.user.oc1..aaaaaaaavxg4ceribtzyjqcjgjq44dnwo4d4wdunxkh7l5owk2zifrr7dfea'
                keyfile = new File('.oci/writer.pem')
                passphrase = System.getenv("OCI_WRITER_KEY_PASSPHRASE")
                fingerprint = 'ff:d9:c6:96:cb:20:64:77:1d:4e:a0:3e:bf:85:c7:e3'
            } else {
                userId = 'ocid1.user.oc1..aaaaaaaa463rzwweyef2fcby47wz73i6eyp7hwd6skx7bdgf2ie6ido35tla'
                keyfile = new File('.oci/reader.pem')
                fingerprint = '20:b5:2b:b1:c7:ab:da:2d:82:e9:81:1b:63:f8:59:16'
            }
        }
    }
}
